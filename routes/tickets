const express = require('express');
const router = express.Router();
const Ticket = require('../models/Ticket');
const QRCode = require('qrcode');

router.get('/:transactionReference', async (req, res) => {
  try {
    const { transactionReference } = req.params;
    console.log('Fetching ticket:', transactionReference);
    const ticket = await Ticket.findOne({ transactionReference });
    if (!ticket) {
      console.log('Ticket not found:', transactionReference);
      return res.status(404).json({ error: 'Ticket not found' });
    }
    const qrCodeUrl = await QRCode.toDataURL(JSON.stringify({ ticketId: ticket.ticketId }));
    res.json({
      ticketId: ticket.ticketId,
      eventTitle: ticket.eventTitle,
      qrCode: qrCodeUrl,
      transactionReference: ticket.transactionReference,
      status: ticket.status,
      ticketQuantity: ticket.ticketQuantity,
      totalPrice: ticket.totalPrice,
    });
  } catch (err) {
    console.error('Error fetching ticket:', err);
    res.status(500).json({ error: 'Server error' });
  }
});

router.post('/', async (req, res) => {
  try {
    const {
      ticketId, transactionReference, eventId, eventTitle, firstName, lastName, email,
      isGift, recipientFirstName, recipientLastName, recipientEmail, ticketQuantity, totalPrice,
    } = req.body;

    const ticketData = {
      ticketId: ticketId || `TICKET-${Date.now()}`,
      transactionReference: transactionReference || `TICKET-${Math.floor(100000 + Math.random() * 900000)}-${Date.now()}`,
      eventId,
      eventTitle,
      ticketHolder: { firstName, lastName, email },
      isGift: !!isGift,
      recipient: isGift ? { firstName: recipientFirstName, lastName: recipientLastName, email: recipientEmail } : undefined,
      status: 'unused',
      ticketQuantity,
      totalPrice,
    };

    const ticket = new Ticket(ticketData);
    await ticket.save();
    res.status(201).json({
      ticketId: ticket.ticketId,
      transactionReference: ticket.transactionReference,
      eventTitle: ticket.eventTitle,
    });
  } catch (err) {
    console.error('Error creating ticket:', err);
    res.status(500).json({ error: 'Server error' });
  }
});

module.exports = router;
